"""
Django settings for ZakharovMachineLearn project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
#import psycopg2.extensions

from pathlib import Path
import os, os.path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
SETTINGS_PATH = os.path.dirname(os.path.dirname(__file__))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'wozr$5u354-o@m0jqv+#u+lb^s^%@@v35#auc0sge_)=l9n^97'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# допустимые хосты / IP адреса для запуска процесса django
ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ZakharovMachineLearn'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware'
]

# где находятся данные по соответствию обработчиков (views) и URL запросов
ROOT_URLCONF = 'ZakharovMachineLearn.urls'

# настройки для шаблонов (где храняться, какие контекстные процессоры использовать и т.д.)
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(SETTINGS_PATH, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'ZakharovMachineLearn.context_processors.ad_visibility'
            ],
        },
    },
]

WSGI_APPLICATION = 'ZakharovMachineLearn.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# Настройки базы данных - имя, логин и пароль юзера,тип базы данных
# порт.... используется Postgresql
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ZakharovMachineLearn1',
        'USER': 'postgres',
        'PASSWORD': '12345',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

# какие валидаторы будут использованы для проверки поля пароля при регистрации

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

# языковые настройки Django
LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = False

USE_TZ = True

# к URL автоматически добавляется слэш в конце
APPEND_SLASH = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# префикс URL для стаитических файлов
STATIC_URL = '/static/'

# путь к дериктории со статическими файлами
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# на какой URL перенаправлять, если требуется авторизация для некоторого запроса
# и если пользователь не авторизован
LOGIN_URL = "/auth"

# модель переопределенного (расширенного) пользователя - наследника
# от AbstractUser - определяется в моделях
AUTH_USER_MODEL = "ZakharovMachineLearn.User"

# настройки почты (почтового сервиса)
EMAIL_USE_TLS = True  # защищенное соединение
EMAIL_PORT = 587  # порт SMTP сервера (почтовый сервис Google)
EMAIL_HOST = "smtp.gmail.com"  # домен SMTP сервера
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"  # что используется для отправки почты
EMAIL_HOST_USER = "podrivkamazov@gmail.com"  # username в этом почтовом сервисе
EMAIL_HOST_PASSWORD = "pjvyirytroufelsv"  # пароль приложения почтового сервиса


DATETIME_FORMAT = 'd F Y H:i'  # формат вывода дат в приложении


ADVERTISMENT = True  # включена ли реклама
SEND_REAL_EMAIL = False  # отправлять ли настоящий email на почту

# местонахождение для MEDIA файлов (те, что пользователи загружат нам на сервер)
MEDIA_ROOT = os.path.join(__package__, "media")

# префикс URL адреса, который означает, что делается запрос на получение MEDIA файлов
MEDIA_URL = "/media/"

# нужно, чтобы при изменении размера картинки библиотекой django-resized
# расширение файла PNG не менялось на APNG
DJANGORESIZED_DEFAULT_FORMAT_EXTENSIONS = {'PNG': ".png"}